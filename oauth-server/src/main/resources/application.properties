# server
server.port = 8090

# disable spring security
security.basic.enabled = false
management.security.enabled = false

# app settings
spring.application.name = auth2-server

# data source
spring.datasource.url = jdbc:mysql://localhost:3306/simple_oauth?useUnicode=true&characterEncoding=utf-8&useSSL=false
spring.datasource.username = root
spring.datasource.password = root
spring.datasource.initialize = true
spring.jpa.show-sql = true

# simple admin configuration
# jwt check flag
app.jwt.check.enable = true
app.jwt.sign.secret = secret
app.jwt.sign.issuer = oauth-server
app.jwt.sign.expires = 168
app.jwt.check.skip.uri = /api/account/login,/api/account/refreshPassword,/api/account/register,/oauth2/token,/oauth2/revoke,/oauth2/introspect,/oauth2/docker/token,/api/clients/introspect

# oauth
# auth code的过期时间：10分钟（10*60*1000=600000）
# access token的过期时间：6小时（6*60*60*1000=21600000）
# refresh token的过期时间：3天（3*24*60*60*1000=259200000）
app.oauth.expiration.code = 600000
app.oauth.expiration.access = 21600000
app.oauth.expiration.refreshtoken = 259200000

# scheduler，其中timeout一般配置为fixedRate的三倍
# Token软删除：每隔5分钟
# Token硬删除：每天下午13点05分
app.scheduler.enable = true
app.scheduler.token.removal = 0 0/5 * * * ?
app.scheduler.token.clean = 0 5 13 * * ?

# docker registry with fixed client id/secret
app.docker.registry.clientId = docker
app.docker.registry.clientSecret = docker_secret
